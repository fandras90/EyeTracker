# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Vicker API
  description: API description for Vicker Android application
  version: "1.0.0"
# the domain of the service
host: api.vicker.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /api
consumes:
  - application/json
    application/x-www-form-urlencoded
    application/xml
    text/xml
produces:
  - application/json
    application/xml
    text/xml
    application/javascrip
    text/javascript
paths:
  /frames:
    get:
      operationId: getFrames
      summary: Measured frames
      description: The Frames endpoint returns items from all previous uploads of the user. The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.
      parameters:
        - name: offset
          in: query
          type: integer
          format: int32
          description: Offset the list of returned results by this amount. Default is zero.
        - name: limit
          in: query
          type: integer
          format: int32
          description: Number of items to retrieve. Default is 5, maximum is 100.
      tags:
        - Frame
      responses:
        200:
          description: Frames for the given user
          schema:
            $ref: "#/definitions/Frames"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: newFrame
      summary: Upload Frame
      description: The Specific Frame endpoint creates a new frame.
      parameters:
        - name: postBody
          in: body
          required: true
          schema:
            $ref: "#/definitions/Frame"
      tags:
        - Frame
      responses:
        200:
          description: The frame was successfully created
          schema:
            $ref: "#/definitions/Frame"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /frames/{id}:
    get:
      operationId: getFrameById
      summary: Specific Frame
      description: The Specific Frame endpoint returns the frame with the given id.
      parameters:
        - name: id
          in: path
          description: Id of the frame
          required: true
          type: integer
      tags:
        - Frame
      responses:
        200:
          description: The frame with given id
          schema:
            $ref: "#/definitions/Frame"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: deleteFrame
      summary: Delete Frame
      description: The Delete Frame endpoint deletes the frame with the given id.
      parameters:
        - name: id
          in: path
          description: Id of the frame
          required: true
          type: integer
      tags:
        - Frame
      responses:
        200:
          description: Successful deletion
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
      
  /me:
    get:
      operationId: getUser
      summary: User Profile
      description: The User Profile endpoint returns information about the EyeTracker user that has authorized with the application.
      tags:
        - User
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Profile:
    type: object
    properties:
      first_name:
        type: string
        description: First name of the user
      last_name:
        type: string
        description: Last name of the user
      email:
        type: string
        description: Email address of the user
      avatar:
        type: string
        description: Image URL of the user
  Coordinate:
    type: object
    properties:
      xCoord:
        type: number
        format: float
        description: X coordinate
      yCoord:
        type: number
        format: float
        description: Y coordinate
  Frame:
    type: object
    properties:
      createdOn:
        type: string
        format: date-time
        description: Date of creation
      title:
        type: string
      filterType:
        type: string
      image:
        $ref: "#/definitions/Image"
      left_center:
        $ref: "#/definitions/Coordinate"
      right_center:
        $ref: "#/definitions/Coordinate"
  Frames:
    type: object
    properties:
      offset:
        type: integer
        format: int32
        description: Position in pagination
      limit:
        type: integer
        format: int32
        description: Number of items to retrieve (100 max)
      count:
        type: integer
        format: int32
        description: Total number of items available
      frames:
        type: array
        items:
          $ref: "#/definitions/Frame"
  Image:
    type: object
    properties:
      width:
        type: integer
        format: int32
      height:
        type: integer
        format: int32
      url:
        type: string
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
